@{
    ViewData["Title"] = "O(n+m) Search";
}
<h1>@ViewData["Title"]</h1>

<p>This view will display the O(n + m) search algo.</p>

<input id="randomGen" type="button" value="Randomize" onclick= "randomNum()"/>
<input id="textField" type="text" value = 6  />
<input id="textField2" type="text" value = 3  />
<input id="searchButton" type="button" value="Search" onclick= "ONSearch(target)" />

<script>



</script>

<div>
  <canvas id="myChart"></canvas>
 
</div>
 <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>

    var label = 1;
        
     var target =  parseInt(textField.value);
      const labels = [
      label++,
      label++,
      label++,
      label++,
      label++,
      label++,
    ];
    const data = {
      labels: labels,
      datasets: [{
        label: 'O(n + m)',
        backgroundColor: [
        'rgb(255, 99, 132)',
        'rgb(255, 99, 132)',
        'rgb(255, 99, 132)',
        'rgb(255, 99, 132)',
        'rgb(255, 99, 132)',
        'rgb(255, 99, 132)',
        'rgb(255, 99, 132)',
            ],
        borderColor: 'rgb(255, 99, 132)',
        data: [ 1, 2, 3, 4, 5, 6, 7, 8],

      }]
    };
    
     function randomNum() 
     {
        for(var i = 0; i < 7; i ++)
        {
            data.datasets[0].backgroundColor[i] = 'rgb(255, 99, 132)';
            data.datasets[0].data[i] = Math.floor(Math.random() * 100);
            console.log(data.datasets[0].data[i]);
        }
        myChart.update();
        return;
     }

      const config = {
      type: 'bar',
      data: data,
      options: {}
    };
    //TODO: This function needs to pause to give the view time to look at the animations changing
     function ONSearch() 
     {
        var found1 = false;
        var found2 = false;
        target =  parseInt(textField.value);
        target2 = parseInt(textField2.value);
        myChart.update();
        //This loop represents a O(n) search that is searching for n 
         for(var i = 0; i < 7; i ++)
        {
            //change color for each bar we are looking at to green while we look at it
            data.datasets[0].backgroundColor[i] = 'rgb(0, 255, 132)';
            myChart.update();
            // if we found the target, then end this loop and keep the color of the previos bar as green
            if(data.datasets[0].data[i] == target) 
            {
                console.log("true");
                found1 = true;
                break;
            }
            //change color back to red if its not the target
            data.datasets[0].backgroundColor[i] = 'rgb(255, 99, 132)';
            
        }
        //This loop represents a O(m) search that is searching for m
        for(var i = 0; i < 7; i ++)
        {
            //change color of the num we are looking a to green

            data.datasets[0].backgroundColor[i] = 'rgb(0, 255, 132)';
            myChart.update();
            
            // if we found the second target, then exit the loop and keep its color green 
            if(data.datasets[0].data[i] == target2) 
            {
                console.log("true");
                found2 =  true;
                break;
            }
            //Change the bars color back to red if the num we are looking at is not the target
            if(data.datasets[0].data[i] != target)
            {
                data.datasets[0].backgroundColor[i] = 'rgb(255, 99, 132)';
                myChart.update();
            }
        }



        if(found1 && found2) return true;
        return false;
     }
  
    // === include 'setup' then 'config' above ===
  const myChart = new Chart(document.getElementById('myChart'),config);
  

  
</script>